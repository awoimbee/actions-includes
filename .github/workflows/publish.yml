# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Build and publish

on:
  push:

jobs:

  build-n-publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9']
    name: ${{ matrix.python-version }}

    steps:

    - uses: actions/checkout@v2
      with:
        # Always clone the full depth so git-describe works.
        fetch-depth: 0
        submodules: true

    - name: Set up Python üêç ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        pip install -U pip
        pip install -U setuptools wheel twine

    - name: Install package
      run: python setup.py install

    - name: Build and check distribution üì¶
      run: |
        python setup.py sdist bdist_wheel
        twine check dist/*

    - name: Publish to Test PyPI
      if: github.event_name != 'pull_request' && github.repository == 'mithro/action-includes' && github.ref == 'refs/heads/master'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: twine upload --skip-existing --repository testpypi dist/*

    - name: Publish to PyPI
      if: github.event_name != 'pull_request' && github.repository == 'mithro/action-includes' && github.ref == 'refs/heads/master'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload --skip-existing dist/*

    - name: 'üì§ Upload artifact'
      uses: actions/upload-artifact@v2
      with:
        name: wheel-${{ matrix.python-version }}
        path: dist/*


  container:
    needs: [ build-n-publish ]
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest

    # Run a local registry
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    env:
      IMG_NAME: mithro/actions-includes

    steps:

    - uses: actions/checkout@v2

    - name: 'üì• Download artifact'
      uses: actions/download-artifact@v2
      with:
        name: wheel-3.9
        path: docker

    - name: Build
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker build -t ghcr.io/${IMG_NAME}/image ./docker

#    - name: Check the docker image
#      run: |
#        make image-test

    - name: Inspect
      run: |
        docker tag ghcr.io/${IMG_NAME}/image localhost:5000/${IMG_NAME}:latest
        docker push localhost:5000/${IMG_NAME}:latest
        docker buildx imagetools inspect localhost:5000/mithro/actions-includes:latest

    - name: Login to GHCR
      if: github.event_name != 'pull_request' && github.repository == 'mithro/action-includes' && github.ref == 'refs/heads/master'
      uses: docker/login-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GHA_CR_TOKEN }}
        registry: ghcr.io

    - name: Push
      if: github.event_name != 'pull_request' && github.repository == 'mithro/action-includes' && github.ref == 'refs/heads/master'
      run: docker push ghcr.io/${IMG_NAME}/image
